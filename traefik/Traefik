[SET FILES/PATHS]

mkdir traefik
cd traefik
touch docker-compose.yml
mkdir data
cd data
touch acme.json
chmod 600 acme.json
touch traefik.yml
touch config.yml

sudo apt update

sudo apt install apache2-utils
echo $(htpasswd -nb <USER> <PASSWORD>) | sed -e s/\\$/\\$\\$/g
	- Paste output in docker-compose.yml in line (traefik.http.middlewares.traefik-auth.basicauth.users=<USER>:<HASHED-PASSWORD>)

[TRAEFIK FILE]

api:
  dashboard: true
  debug: true
entryPoints:
  http:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: https
          scheme: https
  https:
    address: ":443"
serversTransport:
  insecureSkipVerify: true
providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false
  file:
    filename: /config.yml
certificatesResolvers:
  cloudflare:
    acme:
      email: <YOUR CLOUDFLARE EMAIL>
      storage: acme.json
      dnsChallenge:
        provider: cloudflare
        resolvers:
          - "1.1.1.1:53"
          - "1.0.0.1:53"
  <ADD DNS PROVIDER NAME FOR MULTIPLE DOMAINS AND SSL CERTIFICATES IF USING OTHER THAN CLOUDFLARES>:
    acme:
      email: <DNS PROVIDER EMAIL ACCOUNT>
      storage: acme.json
      dnsChallenge:
        provider: <PROVIDER NAME>
        resolvers:
          - "<IP RESOLVERS>"

[CONFIG FILE]

http:
  routers:
    router-1:
      entryPoints:
        - "https"
      rule: "Host(`<HOST URL>`)"
      middlewares:
        - default-headers
      tls: {} <ONE DOMAIN>
      tls: <MULTIPLE DOMAINS AND SSL CERTIFICATES DOMAIN>
        certresolver: "DNS PROVIDER NAME (CONFIG FILE)"
        domains: "<DOMAIN>,<SUB DOMAIN>.<DOMAIN>"
      service: service-1
  services:
    service-1:
      loadBalancer:
        servers:
          - url: "http://<IP ADDRESS>:<PORT>"
        passHostHeader: true
  middlewares:
    https-redirect:
      redirectScheme:
        scheme: https
    default-headers:
      headers:
        frameDeny: true
        sslRedirect: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https
    default-whitelist:
      ipWhiteList:
        sourceRange:
        - "IP ADDRESS RANGE"
	- "..."
    secured:
      chain:
        middlewares:
        - default-whitelist
        - default-headers

[DOCKER-COMPOSE FILE]

version: '3.8'

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
    env_file:
      - .env
    environment:
      - <ENVIROMENT VARIABLE FOR API EMAIL>=<KEY FROM ENV FILE>
      - <ENVIROMENT VARIABLE FOR API KEY>=<KEY FROM ENV FILE>
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/username/traefik/data/traefik.yml:/traefik.yml:ro
      - /home/username/traefik/data/acme.json:/acme.json
      - /home/username/traefik/data/config.yml:/config.yml:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`<SUB-DOMAIN>.<DOMAIN>`)"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=<USER>:<HASHED-PASSWORD>"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`<SUB-DOMAIN>.<DOMAIN>`)"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
		<ONE DOMAINS>
		- "traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"
		- "traefik.http.routers.traefik-secure.tls.domains[0].main=<DOMAIN>"
		- "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.<LOCAL>.<DOMAIN>"
		<MULTIPLE DOMAINS DOMAINS>
      		- "traefik.http.routers.traefik-secure.tls.certresolver=DNS PROVIDER NAME (CONFIG FILE)"
      		- "traefik.http.routers.traefik-secure.tls.domains=<DOMAIN>,<SUB DOMAIN>.<DOMAIN>"
      - "traefik.http.routers.traefik-secure.service=api@internal"

networks:
  proxy:
    external: true

[CREATE DOCKER PROXY NETWORK]

docker network create proxy

docker-compose up -d
docker-compose up -d --force-recreate
